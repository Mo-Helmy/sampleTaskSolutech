// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task.Infrastructure.Data;

#nullable disable

namespace Task.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241006124427_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreSpaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreSpaceId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Default Product Name 1",
                            StoreSpaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Default Product Name 2",
                            StoreSpaceId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Default Product Name 3",
                            StoreSpaceId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Default Product Name 4",
                            StoreSpaceId = 4
                        });
                });

            modelBuilder.Entity("Task.Domain.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInvoiceDirect")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Al Gammal St - Cairo - Egypt",
                            IsInvoiceDirect = true,
                            IsMain = true,
                            Name = "Main Store"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ain Shams St - Cairo - Egypt",
                            IsInvoiceDirect = true,
                            IsMain = false,
                            Name = "Electric Store"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Port Said St - Cairo - Egypt",
                            IsInvoiceDirect = false,
                            IsMain = false,
                            Name = "Food Store"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Port Said St - Cairo - Egypt",
                            IsInvoiceDirect = false,
                            IsMain = false,
                            Name = "Machines Store"
                        });
                });

            modelBuilder.Entity("Task.Domain.Entities.StoreSpace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreSpaces", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDefault = true,
                            Name = "Default",
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsDefault = true,
                            Name = "Default",
                            StoreId = 2
                        },
                        new
                        {
                            Id = 3,
                            IsDefault = true,
                            Name = "Default",
                            StoreId = 3
                        },
                        new
                        {
                            Id = 4,
                            IsDefault = true,
                            Name = "Default",
                            StoreId = 4
                        });
                });

            modelBuilder.Entity("Task.Domain.Entities.Product", b =>
                {
                    b.HasOne("Task.Domain.Entities.StoreSpace", "Space")
                        .WithMany("Products")
                        .HasForeignKey("StoreSpaceId");

                    b.Navigation("Space");
                });

            modelBuilder.Entity("Task.Domain.Entities.StoreSpace", b =>
                {
                    b.HasOne("Task.Domain.Entities.Store", "Store")
                        .WithMany("Spaces")
                        .HasForeignKey("StoreId");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Task.Domain.Entities.Store", b =>
                {
                    b.Navigation("Spaces");
                });

            modelBuilder.Entity("Task.Domain.Entities.StoreSpace", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
